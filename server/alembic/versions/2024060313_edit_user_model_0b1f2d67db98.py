"""edit_user_model

Revision ID: 0b1f2d67db98
Revises: c5b487d96bdc
Create Date: 2024-06-03 20:13:20.429793

"""

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "0b1f2d67db98"
down_revision = "c5b487d96bdc"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_refresh_token_refresh_token", table_name="refresh_token")
    op.drop_table("refresh_token")
    op.add_column(
        "user_account", sa.Column("firebase_uid", sa.String(length=128), nullable=False)
    )
    op.create_unique_constraint(None, "user_account", ["firebase_uid"])
    op.drop_column("user_account", "hashed_password")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user_account",
        sa.Column(
            "hashed_password",
            sa.VARCHAR(length=128),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint(None, "user_account", type_="unique")
    op.drop_column("user_account", "firebase_uid")
    op.create_table(
        "refresh_token",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "refresh_token", sa.VARCHAR(length=512), autoincrement=False, nullable=False
        ),
        sa.Column("used", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("exp", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user_account.user_id"],
            name="refresh_token_user_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="refresh_token_pkey"),
    )
    op.create_index(
        "ix_refresh_token_refresh_token",
        "refresh_token",
        ["refresh_token"],
        unique=True,
    )
    # ### end Alembic commands ###
